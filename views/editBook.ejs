<%- include('partials/header'); -%>

<section class="edit-book">
  <div class="container">
    <form class="book-form">
      <h2>Edit Book</h2>

      <div class="form-group">
        <label for="title">Book Title:</label>
        <input type="text" id="title" name="title" value="<%=book.title%>" required readonly class="read-only">
      </div>

      <div class="form-group">
        <label for="author">Author:</label>
        <input type="text" id="author" name="author" value="<%=book.author%>" required readonly class="read-only">
      </div>

      <div class="form-group">
        <label for="genre">Genre:</label>
        <input id="genre" name="genre" value="<%=book.genre%>" required readonly class="read-only">
      </div>

      <div class="form-group">
  <label for="collection">Collection:</label>
  <select id="collection" name="collection" required>
    <option value="Uncategorized" selected>Uncategorized</option>
    <% const uniqueCollections = []; %>
    <% books.forEach(book => { %>
      <% if (book.collection && !uniqueCollections.includes(book.collection)) { %>
        <% uniqueCollections.push(book.collection); %>
        <option value="<%= book.collection %>"><%= book.collection %></option>
      <% } %>
    <% }); %>
    <option value="__new__">-- Add New Collection --</option>
  </select>
  <input type="text" id="new-collection" name="new-collection" class="new-collection-input" style="display: none;" placeholder="Enter new collection name">
</div>

      <div class="form-row">
        <div class="form-group">
          <label for="pagesRead">Pages Read:</label>
          <input type="number" id="pagesRead" name="pagesRead" value="<%=book.pagesRead%>" min="0" max="<%=book.totalPages%>" step="1" required>
          <div class="pages-err error"></div>
        </div>

        <div class="form-group">
          <label for="totalPages">Total Pages:</label>
          <input type="number" id="totalPages" name="totalPages" value="<%=book.totalPages%>" min="1" required readonly class="read-only">
        </div>
      </div>

      <div class="form-group">
        <label for="rating">Rating (out of 5):</label>
        <input type="number" id="rating" name="rating" value="<%=book.rating%>" min="0" max="5" step="0.1">
        <div class="rating-err error"></div>
      </div>

      <div class="form-group">
        <label for="remarks">Remarks:</label>
        <textarea id="remarks" name="remarks" rows="3"><%=book.remarks%></textarea>
      </div>

      <div class="form-actions">
        <button type="submit" class="btn submit-btn">Update Details</button>
        <a href="/myLibrary" class="btn cancel-btn">Cancel</a>
      </div>
    </form>
  </div>
</section>

<script>
    const bookId = "<%=book._id%>"
    const form = document.querySelector('form')
    const userId = "<%= user.id %>"
    console.log("HELOOO IN CONSOLE IN SCRIPT EDITBOOK")
    console.log("Uid",userId)

document.getElementById('collection').addEventListener('change', function() {
      const newCollectionInput = document.getElementById('new-collection');
      if (this.value === '__new__') {
        this.style.display = 'none';
        newCollectionInput.style.display = 'block';
        newCollectionInput.focus();
      }
    });

    document.getElementById('new-collection').addEventListener('blur', function() {
      if (this.value.trim() === '') {
        const collectionSelect = document.getElementById('collection');
        collectionSelect.style.display = 'block';
        this.style.display = 'none';
        collectionSelect.value = '';
      }
    });

    form.addEventListener('submit',async (e)=>{
        e.preventDefault()
        console.log("After Add Book")
        const title = form.title.value
        const author = form.author.value
        const genre = form.genre.value
        const pagesRead = form.pagesRead.value
        const totalPages = form.totalPages.value
        const rating = form.rating.value
        const remarks = form.remarks.value

        let collection = form.collection.value;
    if (collection === '__new__') {
        collection = form['new-collection'].value.trim();
        if (!collection) {
            alert('Please enter a valid collection name');
            return;
        }
    }

        try {
  const res = await fetch(`/edit-book/${bookId}`, {
    method: 'PATCH',
    body: JSON.stringify({
      userId: "<%=user.id%>",
      title,
      author,
      genre,
      collection,
      pagesRead,
      totalPages,
      completionStatus: pagesRead * 100 / totalPages,
      rating,
      remarks
    }),
    headers: { 'Content-Type': 'application/json' }
  })

  const data = await res.json()
  console.log("Updated book data:", data)

  if (res.ok) {
    window.location.href = '/myLibrary'
  }
} catch (err) {
  console.error("Error in PATCH request:", err)
}
    })
</script>

<%- include('partials/footer'); -%>
