<!DOCTYPE html>
<%- include('partials/header'); -%>


  <nav>
    <h2>Books of <%=user.email%></h2>
  </nav>

  <header>
    <h2>Total Books: <span id="totalBooks"><%=user.TotalBooks.length%></span></h2>
  </header>

  <section class="filters">

    <label for="statusFilter">Filter by Status:</label>
    <select id="statusFilter">
      <option value="all">All</option>
      <option value="completed">Completed</option>
      <option value="in-progress">In Progress</option>
    </select>
    

    <div class="custom-multiselect">
  <button type="button" onclick="toggleGenreDropdown()">Select Genre</button>
  <div id="genreDropdown" class="dropdown-content">
    <label><input type="checkbox" value="All" checked> All</label>
    <label><input type="checkbox" value="Fiction"> Fiction</label>
    <label><input type="checkbox" value="Non-Fiction"> Non-Fiction</label>
    <label><input type="checkbox" value="Sci-Fi"> Sci-Fi</label>
    <label><input type="checkbox" value="Fantasy"> Fantasy</label>
    <label><input type="checkbox" value="History"> History</label>
    <label><input type="checkbox" value="Biography"> Biography</label>
    <label><input type="checkbox" value="Self-Improvement"> Self-Improvement</label>
    <label><input type="checkbox" value="Other"> Other</label>
  </div>
</div>

    <a href = '/add-book' class="btn addBook">Add Book</a>
    
  </section>

  <section class="books">
    <% books.map((book)=>{ %>
        <div class="book" id="<%=book._id%>">
          <h1><%=book.title%></h1>
          <h3>By <%=book.author%></h3>
          <p >Genre: <span id = 'bookGenre'><%=book.genre%></span></p>
          <p>Pages: <span><%=book.pagesRead%> / <%=book.totalPages%></span></p>
          <p>Rating: <span><%=book.rating%></span></p>
          <p>Remarks: <span><%=book.remarks%></span></p>

          <div class="actions">
            <button class="btn updateButton" book-id = "<%=book._id%>">Update</button>
            <button class="btn deleteButton" book-id = "<%=book._id%>">Delete</button>
          </div>
        </div>
    <%})%>
  </section>

  <script>
    const userTotalBooks = "<%=user.TotalBooks%>".split(',')
    const userCompletedBooks = "<%=user.CompletedBooks%>".split(',')

    console.log("totalbooks: ",userTotalBooks, typeof(userTotalBooks))
    const statusFilter = document.getElementById('statusFilter');
    const genreFilter = document.getElementById('genreFilter')
    const booksSection = document.querySelectorAll('.book')

    statusFilter.addEventListener('change', (e)=>{
      e.preventDefault()
      const selectedStatus = statusFilter.value
      booksSection.forEach(book=>{
        const bookId = book.getAttribute('id')
        if( (  selectedStatus == 'all' && userTotalBooks.some(id=> id===(bookId))  ) || 
            (  selectedStatus == 'completed' && userTotalBooks.some(id=> id===(bookId)) && userCompletedBooks.some(id=> id===(bookId))  ) || 
            (  selectedStatus == 'in-progress' && userTotalBooks.some(id=> id===(bookId)) && !userCompletedBooks.some(id=> id===(bookId))  ) ) {
              book.style.display = 'block';
        }
        else{
          book.style.display = 'none'
        }
      })
    })


function toggleGenreDropdown() {
  const dropdown = document.getElementById('genreDropdown')
  dropdown.style.display = dropdown.style.display === 'block' ? 'none' : 'block'
}

const genreDropdown = document.getElementById('genreDropdown')
genreDropdown.addEventListener('change', () => {
  const selectedGenres = Array.from(genreDropdown.querySelectorAll('input[type="checkbox"]'))
    .filter(checkbox => checkbox.checked)
    .map(checkbox => checkbox.value)

  booksSection.forEach(book => {
    const bookGenre = book.querySelector('#bookGenre').textContent
    if (selectedGenres.includes('All') || selectedGenres.includes(bookGenre)) {
      book.style.display = 'block'
    } else {
      book.style.display = 'none'
    }
  })
})


    const bookSections = document.querySelectorAll(".book")
    const userId = "<%=user.id%>"
    bookSections.forEach(bookInfo=>{
        const bookId = bookInfo.getAttribute('id');
        const bookName = bookInfo.querySelector('h1').textContent
        const bookAuthor = bookInfo.querySelector('h3').textContent.replace('By ','')
        console.log("Inside foreach Deleting Book: ", bookName, " By: ",bookAuthor," Id: ",bookId, " type of bookId",typeof(bookId))


        const delbtn = bookInfo.querySelector(".deleteButton");

        delbtn.addEventListener('click', async (e)=>{
            e.preventDefault()
            console.log("Deleting Book: ", bookName, " By: ",bookAuthor," Id: ",bookId, "typeof BookID",typeof(bookId))
            try{
              const res = await fetch(`/delete/${userId}/${bookId}`,{
                  method: 'DELETE',
              })
              const data = await res.json()
              console.log("data after deleting: ",bookId,data);
              window.location.reload()

            }
            catch(err){
              console.log("Error in myLibrary.ejs line 81")
              console.log(err.message)
            }
        })

        const updtbtn = bookInfo.querySelector('.updateButton')
        updtbtn.addEventListener('click',(e)=>location.assign(`/edit-book/${bookId}`))
    
    
      })


  </script>



<%- include('partials/footer'); -%>