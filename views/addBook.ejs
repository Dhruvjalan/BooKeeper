<%- include('partials/header'); -%>

<section class="add-book">
  <div class="container">
    <form class="book-form">
      <h2>Add New Book</h2>

      <div class="form-group">
        <label for="title">Book Title:</label>
        <input type="text" id="title" name="title" placeholder="Enter book title" required>
      </div>
      
      <div class="duplicate error">NoError</div>

      <div class="form-group">
        <label for="author">Author:</label>
        <input type="text" id="author" name="author" placeholder="Enter author name" required>
      </div>

      <div class="form-group">
        <label for="genre">Genre:</label>
        <select id="genre" name="genre" required>
          <option value="" disabled selected>Select genre</option>
          <option value="Fiction">Fiction</option>
          <option value="Non-Fiction">Non-Fiction</option>
          <option value="Sci-Fi">Sci-Fi</option>
          <option value="Fantasy">Fantasy</option>
          <option value="History">History</option>
          <option value="Biography">Biography</option>
          <option value="Self-Improvement">Self-Improvement</option>
          <option value="Other">Other</option>
        </select>
      </div>

<div class="form-group">
  <label for="collection">Collection:</label>
  <select id="collection" name="collection" required>
    <option value="Uncategorized" selected>Uncategorized</option>
    <% const uniqueCollections = []; %>
    <% books.forEach(book => { %>
      <% if (book.collection && !uniqueCollections.includes(book.collection)) { %>
        <% uniqueCollections.push(book.collection); %>
        <option value="<%= book.collection %>"><%= book.collection %></option>
      <% } %>
    <% }); %>
    <option value="__new__">-- Add New Collection --</option>
  </select>
  <input type="text" id="new-collection" name="new-collection" class="new-collection-input" style="display: none;" placeholder="Enter new collection name">
</div>



      <div class="form-row">
        <div class="form-group">
          <label for="pagesRead">Pages Read:</label>
          <input type="number" id="pagesRead" name="pagesRead" value="0" min="0" required>
        </div>

        <div class="form-group">
          <label for="totalPages">Total Pages:</label>
          <input type="number" id="totalPages" name="totalPages" value="1" min="1" required>
        </div>
      </div>

      <div class="form-group">
        <label for="rating">Rating (out of 5):</label>
        <input type="number" id="rating" name="rating" value="0" min="0" max="5" step="0.1" placeholder="0-5">
      </div>

      <div class="form-group">
        <label for="remarks">Remarks:</label>
        <textarea id="remarks" name="remarks" rows="3" placeholder="Optional remarks"></textarea>
      </div>

      <div class="form-actions">
        <button type="submit" class="btn submit-btn">Add Book</button>
        <a href="/myLibrary" class="btn cancel-btn">Cancel</a>
      </div>
    </form>
  </div>
</section>

<script>
    const form = document.querySelector('form')
    const userId = "<%= user.id %>"
    const duplicate_error = document.querySelector('.duplicate.error')
    
    document.getElementById('collection').addEventListener('change', function() {
      const newCollectionInput = document.getElementById('new-collection');
      if (this.value === '__new__') {
        this.style.display = 'none';
        newCollectionInput.style.display = 'block';
        newCollectionInput.focus();
      }
    });

    document.getElementById('new-collection').addEventListener('blur', function() {
      if (this.value.trim() === '') {
        const collectionSelect = document.getElementById('collection');
        collectionSelect.style.display = 'block';
        this.style.display = 'none';
        collectionSelect.value = '';
      }
    });

form.addEventListener('submit', async (e) => {
    e.preventDefault();
    
    const title = String(form.title.value);
    const author = String(form.author.value);
    const genre = String(form.genre.value);
    const pagesRead = Number(form.pagesRead.value);
    const totalPages = Number(form.totalPages.value);
    const rating = Number(form.rating.value);
    const remarks = String(form.remarks.value);
    
    let collection = form.collection.value;
    if (collection === '__new__') {
        collection = form['new-collection'].value.trim();
        if (!collection) {
            alert('Please enter a valid collection name');
            return;
        }
    }

    try {
  const res = await fetch('/add-book', {
    method: 'POST',
    body: JSON.stringify({
      userId, 
      title,
      author,
      genre,
      collection, 
      completionStatus: pagesRead * 100 / totalPages,
      pagesRead,
      totalPages,
      rating, 
      remarks
    }),
    headers: { 'Content-Type': 'application/json' }
  });

  const data = await res.json();

  if (data.duplicate_error) {
    duplicate_error.textContent = data.duplicate_error;
    duplicate_error.style.display = 'block';
    return;
  }

  if (res.ok) {
    window.location.href = '/myLibrary';
  }
} catch (err) {
  console.error("Error:", err);
}

});

</script>

<%- include('partials/footer'); -%>